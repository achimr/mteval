# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/10_modernmt.ipynb.

# %% auto 0
__all__ = ['modernmttranslate']

# %% ../nbs/10_modernmt.ipynb 7
import requests, uuid
import os
from langcodes import *

class modernmttranslate:
    """
    Class to get translations from the ModernMT API
    """
    def __init__(self):
        """Constructor of modernmttranslate class"""
        self._subscription_key = os.getenv('MMT_API_KEY')
        self._endpoint = "https://api.modernmt.com/translate"
        self._languages_cache = []
        
    def check_langpair(self, sourcelang, targetlang):
        """Function to verify if a language pair identified by language ids is supported
        
        Parameters
        ----------
        sourcelang : str
            Source language identifier (BCP-47 format).
        targetlang : str
            Target language identifier (BCP-47 format).
            
        Returns
        -------
        bool
            Returns `True` if language pair is supported, otherwise `False`.
        
        """
        path = '/languages'
        constructed_url = self._endpoint + path
        
        supported_languages = self._languages_cache
        # Cached language array empty if not initialized yet
        if not supported_languages:
            # Not passing API key here, because authentication isn't required for this API endpoint
            request = requests.get(constructed_url)
            response = request.json()
            supported_languages = response["data"]
            self._languages_cache = supported_languages
            
        language_pair_supported = False
        if tag_is_valid(sourcelang) and tag_is_valid(targetlang):
            if sourcelang in supported_languages and targetlang in supported_languages:
                language_pair_supported = True
        
        return language_pair_supported

    def translate_text(self,sourcelang, targetlang, text):
        """Function to translate text into the target language
        
        Parameters
        ----------
        sourcelang : str
            Source language identifier (BCP-47 format).
        targetlang : str
            Target language identifier (BCP-47 format).
        text : str
            Source text that is to be translated.
            
        Returns
        -------
        str
            Translated text.
        """
        translated_text = ""
        if self.check_langpair(sourcelang,targetlang):
            # Add your subscription key and endpoint
            subscription_key = self._subscription_key
            endpoint = self._endpoint

            # For single text translation ModernMT doesn't need a sub path
            path = ""
            params = {
                'source': sourcelang,
                'target': targetlang,
                'q': text
            }
            constructed_url = endpoint + path

            headers = {
                'X-HTTP-Method-Override': 'GET',
                'Content-Type' : 'application/json',
                'MMT-ApiKey' : self._subscription_key
            }

            request = requests.post(constructed_url, params=params, headers=headers)
            response = request.json()
            translated_text = response["data"]["translation"]

        return translated_text
